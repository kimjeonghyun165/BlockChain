{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\jh\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\jh\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\jh\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\jh\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\jh\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"C:\\\\Users\\\\jh\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\jh\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\jh\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\src\\\\components\\\\App.js\";\nimport React, { Component } from 'react';\nimport './navbar';\nimport Navbar from './navbar';\nimport _Web from 'web3';\n\nvar App = /*#__PURE__*/function (_Component) {\n  _inherits(App, _Component);\n\n  _createClass(App, [{\n    key: \"Web3\",\n    value: function () {\n      var _Web2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!window.ethereuem) {\n                  _context.next = 6;\n                  break;\n                }\n\n                window.web3 = new _Web(window.ethereuem);\n                _context.next = 4;\n                return window.ethereuem.enable();\n\n              case 4:\n                _context.next = 7;\n                break;\n\n              case 6:\n                // 윈도우에서 wev3가 감지되면 currentProvider로 새 weㅠ3 인스턴스를 생성\n                if (window.web3) {\n                  window.web3 = new _Web(window.web3.currentProvider);\n                } // 둘중 하나라도 충족x일시 경고창 출력    \n                else {\n                    window.alert('Error: check your metamask');\n                  }\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function Web3() {\n        return _Web2.apply(this, arguments);\n      }\n\n      return Web3;\n    }()\n  }]);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      account: '0x0'\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Navbar, {\n        account: this.state.account,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }\n      }, \"Hello World\"));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["C:/Users/jh/defi-staking-app-starter/defi-staking-app-starter/src/components/App.js"],"names":["React","Component","Navbar","Web3","App","window","ethereuem","web3","enable","currentProvider","alert","props","state","account"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,UAAP;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,IAAP,MAAiB,MAAjB;;IAIMC,G;;;;;;;;;;;qBAIKC,MAAM,CAACC,S;;;;;AACND,gBAAAA,MAAM,CAACE,IAAP,GAAc,IAAIJ,IAAJ,CAASE,MAAM,CAACC,SAAhB,CAAd;;uBACMD,MAAM,CAACC,SAAP,CAAiBE,MAAjB,E;;;;;;;AAEV;AACK,oBAAIH,MAAM,CAACE,IAAX,EACD;AACIF,kBAAAA,MAAM,CAACE,IAAP,GAAc,IAAIJ,IAAJ,CAASE,MAAM,CAACE,IAAP,CAAYE,eAArB,CAAd;AACH,iBAHA,CAIL;AAJK,qBAKA;AACDJ,oBAAAA,MAAM,CAACK,KAAP,CAAa,4BAAb;AACH;;;;;;;;;;;;;;;;;;AAGL,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,6EAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAG;AADD,KAAb;AAFe;AAKlB;;;;6BAEQ;AACL,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,KAAKD,KAAL,CAAWC,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFA,CADJ;AAQH;;;;EAnCaZ,S;;AAsClB,eAAeG,GAAf","sourcesContent":["import React, {Component} from 'react'\r\nimport './navbar'\r\nimport Navbar from './navbar'\r\nimport Web3 from 'web3';\r\n\r\n\r\n\r\nclass App extends Component {\r\n\r\n    async Web3() {\r\n        // 윈도우에서 이더리움이 감지되면 window.ethereum이 활성화될때까지 대기\r\n        if(window.ethereuem) {\r\n            window.web3 = new Web3(window.ethereuem)\r\n            await window.ethereuem.enable()\r\n        }\r\n        // 윈도우에서 wev3가 감지되면 currentProvider로 새 weㅠ3 인스턴스를 생성\r\n        else if (window.web3 )\r\n            {\r\n                window.web3 = new Web3(window.web3.currentProvider)\r\n            } \r\n        // 둘중 하나라도 충족x일시 경고창 출력    \r\n        else {\r\n            window.alert('Error: check your metamask')\r\n        }\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            account : '0x0'\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar account={this.state.account} />\r\n            <div>\r\n                Hello World\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}